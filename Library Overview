# Which package/library did you select?
  The library I used for this project is Racket GUI Toolkit.

2. What is the package/library? 
  The Racket GUI Toolkit is a library in racket that is used to create graphical user interfaces by providing functions and classes that allow programers to make gui applications.
  Some of the things that you can do with this library:
  
  Windows and Frames: The frame% class represents a window in a GUI application. Frames can contain other GUI components such as buttons, text fields, labels, etc.
  
  Panels: Panels hold multiple GUI components and arrange them in a specific layout (e.g., vertical or horizontal). There are different types of panel classes (vertical-panel%, horizontal-panel%, etc.)
  
  The gui Components: The Racket GUI Toolkit has a wide range of gui components that can be added to frames and panels. Some of the common components are:
  
    Buttons: Used to trigger actions or events when clicked.
    Text Fields: Input fields for users to enter text.
    Labels: Used to display text.
    Messages: Used for displaying text information.
    Checkboxes and Radio Buttons: Used for selecting options in a group.
    List Boxes and Combo Boxes: Used for selecting items from a list or dropdown menu.
    Canvas: Areas for drawing graphics or animations.
    Menus and Toolbars: Used for organizing commands and actions.
    Event Handling: GUI components can generate events (e.g., button clicks, mouse movements, keyboard inputs). Programmers can assign event handlers to respond to these events and trigger actions in the application.
  
  Layout Management: Layout managers help control the positioning and sizing of components to create visually appealing and user-friendly interfaces.
  
  Dialog Boxes: Dialog boxes are used for displaying messages, requesting user input, or presenting options.
  
  Styling/Appearance: Programmers can customize the appearance of GUI components by changing properties such as colors, fonts, borders, alignment, etc.

  Graphics and Drawing: The dc% class allows developers to perform low-level drawing operations, such as drawing shapes, lines, text, and images, on a canvas or other drawable surfaces.
  
  

# When was it created?
  June 7, 2010.

Why did you select this package/library?
  I selected this package because I thought it would be interesting to try and make something visual.

How did learning the package/library influence your learning of the language? 
  I found that it helped me understand the purpose of the language better.

How was your overall experience with the package/library? 
  Overall i thought the library was decently easy to understand as i have worked a little with gui's before in another language.
  I would recommend this to others as it is fun to make things with and relatively simple to understand once you figure out how displaying things works.





